//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trawick.DataExceptions.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrackingCubeModels : DbContext
    {
        public TrackingCubeModels()
            : base("name=TrackingCubeModels")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_DataExceptions_MissingPaymentCodes_Result> sp_DataExceptions_MissingPaymentCodes(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DataExceptions_MissingPaymentCodes_Result>("sp_DataExceptions_MissingPaymentCodes", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_DataExceptions_MissingEnrollmentPaymentRecords_Result> sp_DataExceptions_MissingEnrollmentPaymentRecords(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DataExceptions_MissingEnrollmentPaymentRecords_Result>("sp_DataExceptions_MissingEnrollmentPaymentRecords", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_DataExceptions_MissingEnrollmentDates_Result> sp_DataExceptions_MissingEnrollmentDates(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DataExceptions_MissingEnrollmentDates_Result>("sp_DataExceptions_MissingEnrollmentDates", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_DataExceptions_EnrollmentsWithoutBaseform_Result> sp_DataExceptions_EnrollmentsWithoutBaseform(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DataExceptions_EnrollmentsWithoutBaseform_Result>("sp_DataExceptions_EnrollmentsWithoutBaseform", startDateParameter, endDateParameter);
        }
    }
}
